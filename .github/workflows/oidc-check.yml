name: OIDC Check
on: { workflow_dispatch: {} }

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Необязательно для проверки, но оставлю — вдруг пригодится.
      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/yandex-cloud/bin:$PATH"

      # 1) Получаем OIDC ID-токен из GitHub (audience ДОЛЖЕН совпадать с тем, что в федерации)
      - name: Get GitHub OIDC ID token
        id: oidc
        uses: actions/github-script@v7
        with:
          script: |
            const aud = 'https://github.com/adam-devopss/adam-devops-infra';
            const idt = await core.getIDToken(aud);
            if (!idt) core.setFailed('OIDC ID token is empty');
            core.setOutput('idtoken', idt);

      - name: Debug ID token
        run: |
          echo '${{ steps.oidc.outputs.idtoken }}' | cut -d "." -f2 | base64 -d | jq .


      # 2) Обмениваем OIDC → IAM в YC (ВАЖНО: поле jwt)
      - name: Exchange OIDC for IAM token
        id: iam
        run: |
          set -euo pipefail
          IDTOKEN='${{ steps.oidc.outputs.idtoken }}'
          RESP="$(curl -sS -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"jwt\":\"${IDTOKEN}\"}" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens')"
          echo "$RESP" | jq .
          IAM_TOKEN="$(echo "$RESP" | jq -r '.iamToken')"
          if [ -z "$IAM_TOKEN" ] || [ "$IAM_TOKEN" = "null" ]; then
            echo "IAM token is empty"; exit 1
          fi
          echo "IAM_TOKEN=$IAM_TOKEN" >> $GITHUB_ENV

      # 3) Кто мы? Прямой вызов Cloud API (без yc)
      - name: Who am I (Cloud API)
        run: |
          set -euo pipefail
          curl -sS -H "Authorization: Bearer $IAM_TOKEN" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens:whoAmI' | jq .

      # 4) Проверяем, что это ваш SA
      - name: Assert SA is ci-oidc-sa
        run: |
          set -euo pipefail
          SA_NAME="$(curl -sS -H "Authorization: Bearer $IAM_TOKEN" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens:whoAmI' | jq -r '.serviceAccount.name')"
          echo "SA_NAME=$SA_NAME"
          test "$SA_NAME" = "ci-oidc-sa"

