name: OIDC Check
on: { workflow_dispatch: {} }

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Ставим yc (оставлю как есть — вдруг пригодится),
      #    но дальнейшие шаги не зависят от него
      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> "$GITHUB_PATH"
          export PATH="$HOME/yandex-cloud/bin:$PATH"

      # 2) Получаем OIDC ID-токен нативно из GitHub (аудитория = ваша в федерации)
      - name: Get GitHub OIDC ID token
        id: oidc
        uses: actions/github-script@v7
        with:
          script: |
            const aud = 'https://github.com/${{ github.repository }}';
            const idt = await core.getIDToken(aud);
            if (!idt) { core.setFailed('OIDC ID token is empty'); return; }
            core.setOutput('idtoken', idt);

      # 3) Меняем OIDC → IAM (официальная точка обмена YC)
      - name: Exchange OIDC for IAM token
        id: iam
        run: |
          set -euo pipefail
          IDTOKEN='${{ steps.oidc.outputs.idtoken }}'
          RESP="$(curl -sS -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"identityToken\":\"${IDTOKEN}\"}" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens')"
          echo "$RESP" | jq .
          IAM_TOKEN="$(echo "$RESP" | jq -r '.iamToken')"
          if [ -z "$IAM_TOKEN" ] || [ "$IAM_TOKEN" = "null" ]; then
            echo "IAM token is empty"; exit 1
          fi
          echo "IAM_TOKEN=$IAM_TOKEN" >> $GITHUB_ENV

      # 4) Кто мы? (без yc — прямым вызовом whoAmI)
      - name: Who am I (Cloud API)
        id: whoami
        run: |
          set -euo pipefail
          RESP="$(curl -sS -H "Authorization: Bearer $IAM_TOKEN" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens:whoAmI')"
          echo "$RESP" | jq .
          SA_NAME="$(echo "$RESP" | jq -r '.serviceAccount?.name // empty')"
          echo "SA_NAME=$SA_NAME" >> $GITHUB_ENV

      # 5) Проверяем, что это ваш привязанный SA (ci-oidc-sa)
      - name: Assert SA is ci-oidc-sa
        run: |
          test "$SA_NAME" = "ci-oidc-sa"

