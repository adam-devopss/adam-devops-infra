name: OIDC Check

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      # 1) Получаем GitHub OIDC ID token с НУЖНОЙ аудиторияй
      - name: Get GitHub OIDC ID token
        id: oidc
        uses: actions/github-script@v7
        with:
          script: |
            const aud = 'https://github.com/adam-devopss/adam-devops-infra';
            const idtoken = await core.getIDToken(aud); // core уже доступен, не объявляем заново
            core.setOutput('idtoken', idtoken);

      # 2) Печать payload для диагностики (не падаем если base64 ругнётся)
      - name: Print ID token payload
        run: |
          set -euo pipefail
          IDTOKEN='${{ steps.oidc.outputs.idtoken }}'
          echo "$IDTOKEN" | cut -d '.' -f2 | tr '_-' '/+' | base64 -d 2>/dev/null | jq . || true

      # 3) Обмен OIDC → IAM (верный метод createFederationToken)
      - name: Exchange OIDC for IAM token (federation)
        id: iam
        env:
          FED_ID: ${{ secrets.YC_FED_ID }}   # ID твоей OIDC-федерации в YC
        run: |
          set -euo pipefail
          IDTOKEN='${{ steps.oidc.outputs.idtoken }}'
          RESP="$(curl -sS -X POST \
            -H 'Content-Type: application/json' \
            -d "{\"federationId\":\"${FED_ID}\",\"identityToken\":\"${IDTOKEN}\"}" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens:createFederationToken')"
          echo "=== Raw YC response ==="
          echo "$RESP" | jq . || echo "$RESP"
          IAM_TOKEN="$(echo "$RESP" | jq -r '.iamToken // empty')"
          if [ -z "$IAM_TOKEN" ]; then
            echo "IAM token is empty. Likely federation/subject/audience mismatch."
            exit 1
          fi
          echo "::add-mask::$IAM_TOKEN"
          echo "IAM_TOKEN=$IAM_TOKEN" >> $GITHUB_ENV

      # 4) Кто мы? Прямой вызов Cloud API (без yc)
      - name: Who am I (Cloud API)
        run: |
          set -euo pipefail
          curl -sS -H "Authorization: Bearer $IAM_TOKEN" \
            'https://iam.api.cloud.yandex.net/iam/v1/tokens:whoAmI' | jq .

      # (опционально) Поставим yc и выведем версию — отдельно от обмена токенов
      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> "$GITHUB_PATH"

      - name: Show YC version
        run: yc --version

